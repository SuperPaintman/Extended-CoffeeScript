<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>coffee</string>
		<string>iced</string>
		<string>Cakefile</string>
		<string>coffee.erb</string>
		<string>cson</string>
	</array>
	<key>name</key>
	<string>Extended CoffeeScript</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#function</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constant</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#regexp</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#oop</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keyword</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variable</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#support</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#invalid</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#other</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!#)###(?!#)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.coffee</string>
						</dict>
					</dict>
					<key>end</key>
					<string>###(?:[ \t]*\n)</string>
					<key>name</key>
					<string>comment.block.coffee</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>@\w*</string>
							<key>name</key>
							<string>storage.type.annotation.coffeescript</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.coffee</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#)(?!\{).*$\n?</string>
					<key>name</key>
					<string>comment.line.number-sign.coffee</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment_embedded</string>
				</dict>
			</array>
		</dict>
		<key>comment_embedded</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.coffee</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;!\\)(#).*$\n?</string>
					<key>name</key>
					<string>comment.line.number-sign.coffee</string>
				</dict>
			</array>
		</dict>
		<key>constant</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?&lt;!\.)(true|on|yes)(?!\s*[:=])\b</string>
					<key>name</key>
					<string>constant.language.boolean.true.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?&lt;!\.)(false|off|no)(?!\s*[:=])\b</string>
					<key>name</key>
					<string>constant.language.boolean.false.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?&lt;!\.)null(?!\s*[:=])\b</string>
					<key>name</key>
					<string>constant.language.null.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Infinity|NaN|undefined)\b</string>
					<key>name</key>
					<string>constant.language.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?&lt;!\.)(this|extends)(?!\s*[:=])\b</string>
					<key>name</key>
					<string>variable.language.coffee</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant_nodejs</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant_numeric</string>
				</dict>
			</array>
		</dict>
		<key>constant_nodejs</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(__dirname|__filename)\b</string>
					<key>name</key>
					<string>constant.other.nodejs.coffee</string>
				</dict>
			</array>
		</dict>
		<key>constant_numeric</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;!\$)\b((0([box])[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?(e[+\-]?[0-9]+)?))\b</string>
					<key>name</key>
					<string>constant.numeric.coffee</string>
				</dict>
			</array>
		</dict>
		<key>function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?x)
  (?=\s*)
  (([a-zA-Z0-9\$_]*)\s*([:=])\s*)?
  (?=\([^()]*\)\s*([=-]&gt;))</string>
					<key>beginCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.coffee</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.coffee</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))\s*([=-]&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.coffee</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#function_parameters</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.coffee</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.coffee</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.coffee</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
  (?=\s*)
  (([a-zA-Z0-9\$_]*)\s*([:=])\s*)?
  (?=\s*)([=-]&gt;)</string>
				</dict>
			</array>
		</dict>
		<key>function_parameters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#constant</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword_operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_double_quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_single_quoted</string>
				</dict>
				<dict>
					<key>match</key>
					<string>([=-]&gt;)</string>
					<key>name</key>
					<string>storage.type.function.coffee</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.this.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.coffee</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.coffee</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(@)?([a-zA-Z0-9\$_][\w\.]*)</string>
					<key>name</key>
					<string>variable.parameter.function.coffee</string>
				</dict>
			</array>
		</dict>
		<key>invalid</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\;</string>
					<key>name</key>
					<string>invalid.deprecated.statement.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)\b(
      var
    )\b</string>
					<key>name</key>
					<string>invalid.illegal.storage.type.coffee</string>
				</dict>
			</array>
		</dict>
		<key>keyword</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(debugger|\\)\b</string>
					<key>name</key>
					<string>keyword.other.coffee</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword_operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword_control</string>
				</dict>
			</array>
		</dict>
		<key>keyword_control</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)
  \b(?&lt;![\.\$])(
    break|by|catch|continue|else|finally|for|in|of|if|return|switch|
    then|throw|try|unless|when|while|until|loop|do|await|defer|(?&lt;=for)\s+own|
    yield
  )(?!\s*:)\b</string>
					<key>name</key>
					<string>keyword.control.coffee</string>
				</dict>
			</array>
		</dict>
		<key>keyword_operator</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)
  and=|or=|!|%|&amp;|\^|\*|\/|(\-)?\-(?!&gt;)|\+\+|\+|~|==|=(?!&gt;)|!=|&lt;=|&gt;=|&lt;&lt;=|&gt;&gt;=|
  &gt;&gt;&gt;=|&lt;&gt;|&lt;|&gt;|!|&amp;&amp;|\.\.(\.)?|\?|\||\|\||\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|&amp;=|
  \^=|\b(?&lt;![\.\$])(instanceof|new|delete|typeof|and|or|is|isnt|not|super)\b</string>
					<key>name</key>
					<string>keyword.operator.coffee</string>
				</dict>
			</array>
		</dict>
		<key>oop</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.new.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.class.coffee</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(new)\s+(@?[a-zA-Z0-9\$_][\w\.]*)</string>
					<key>name</key>
					<string>meta.class.instance.constructo</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.class.coffee</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.inheritance.coffee</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.other.inherited-class.coffee</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(class\b)\s+(@?[a-zA-Z0-9\$_][\w\.]*)?(?:\s+(extends)\s+(@?[a-zA-Z\$\._][\w\.]*))?</string>
					<key>name</key>
					<string>meta.class.coffee</string>
				</dict>
			</array>
		</dict>
		<key>other</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>,[ |\t]*</string>
					<key>name</key>
					<string>meta.delimiter.object.comma.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>meta.delimiter.method.period.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\{|\}</string>
					<key>name</key>
					<string>meta.brace.curly.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\(|\)</string>
					<key>name</key>
					<string>meta.brace.round.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\[|\]\s*</string>
					<key>name</key>
					<string>meta.brace.square.coffee</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.assignment.coffee</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.coffee</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.coffee</string>
						</dict>
					</dict>
					<key>match</key>
					<string>([a-zA-Z0-9\$_](\w|\$|\.)*\s*(?!\::)((:)|(=)(?!&gt;))(?!(\s*\(.*\))?\s*([=-]&gt;)))</string>
					<key>name</key>
					<string>variable.assignment.coffee</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\s|^)([\[\{])(?=.*?[\]\}]\s+[:=])</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.coffee</string>
						</dict>
					</dict>
					<key>end</key>
					<string>([\]\}]\s*[:=])</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.coffee</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.variable.assignment.destructured.coffee</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable_name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable_instance</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string_single_quoted</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string_double_quoted</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#constant_numeric</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.coffee</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.coffee</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.coffee</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.coffee</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
  (\s*)
  (?=[a-zA-Z0-9\$_])
  (
    [a-zA-Z\$_](\w|\$|:|\.)*\s*
    (?=[:=](\s*\(.*\))?\s*([=-]&amp;gt;))
  )</string>
					<key>name</key>
					<string>meta.function.coffee</string>
				</dict>
			</array>
		</dict>
		<key>regexp</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/{3}</string>
					<key>end</key>
					<string>/{3}[imgy]{0,4}</string>
					<key>name</key>
					<string>string.regexp.coffee</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_interpolated</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment_embedded</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>/(?![\s=/*+{}?]).*?[^\\]/[igmy]{0,4}(?![a-zA-Z0-9])</string>
					<key>name</key>
					<string>string.regexp.coffee</string>
				</dict>
			</array>
		</dict>
		<key>string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\'\'\'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.coffee</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\'\'\'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.coffee</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.triple.coffee</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\"\"\"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.coffee</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\"\"\"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.coffee</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.triple.coffee</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_js</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_double_quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_single_quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_interpolated</string>
				</dict>
			</array>
		</dict>
		<key>string_double_quoted</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.coffee</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.coffee</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.coffee</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
							<key>name</key>
							<string>constant.character.escape.coffee</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string_interpolated</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>string_interpolated</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\#\{</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.coffee</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>name</key>
					<string>source.coffee.embedded.source</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>string_js</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\`</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.coffee</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\`</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.coffee</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.interpolated.script.coffee</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
							<key>name</key>
							<string>constant.character.escape.coffee</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>string_single_quoted</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.coffee</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.coffee</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.coffee</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
							<key>name</key>
							<string>constant.character.escape.coffee</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>support</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)\b(
      decodeURI(Component)?|encodeURI(Component)?|eval|parse(Float|Int)|require
    )\b</string>
					<key>name</key>
					<string>support.function.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
  ((?&lt;=\.)(
    apply|call|concat|every|filter|forEach|from|hasOwnProperty|indexOf|
    isPrototypeOf|join|lastIndexOf|map|of|pop|propertyIsEnumerable|push|
    reduce(Right)?|reverse|shift|slice|some|sort|splice|to(Locale)?String|
    unshift|valueOf|
    length
  ))\b</string>
					<key>name</key>
					<string>support.function.method.array.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
  \b(
    Array|ArrayBuffer|Blob|Boolean|Date|document|Function|
    Int(8|16|32|64)Array|Math|Map|Number|
    Object|Proxy|RegExp|Set|String|WeakMap|
    window|Uint(8|16|32|64)Array|XMLHttpRequest|
    Buffer
  )\b</string>
					<key>name</key>
					<string>support.class.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
  ((?&lt;=Array\.)(
        isArray
  ))\b</string>
					<key>name</key>
					<string>support.function.static.array.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
  ((?&lt;=Object\.)(
    create|definePropert(ies|y)|freeze|getOwnProperty(Descriptors?|Names)|
    getProperty(Descriptor|Names)|getPrototypeOf|is(Extensible|Frozen|Sealed)?|
    isnt|keys|preventExtensions|seal
  ))\b</string>
					<key>name</key>
					<string>support.function.static.object.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
  ((?&lt;=Math\.)(
    abs|acos|acosh|asin|asinh|atan|atan2|atanh|ceil|cos|cosh|exp|expm1|floor|
    hypot|log|log10|log1p|log2|max|min|pow|random|round|sign|sin|sinh|sqrt|
    tan|tanh|trunc
  ))\b</string>
					<key>name</key>
					<string>support.function.static.math.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
  ((?&lt;=Number\.)(
    is(Finite|Integer|NaN)|toInteger
  ))\b</string>
					<key>name</key>
					<string>support.function.static.number.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(console)\b</string>
					<key>name</key>
					<string>entity.name.type.object.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>((?&lt;=console\.)(debug|warn|info|log|error|time|timeEnd|assert))\b</string>
					<key>name</key>
					<string>support.function.console.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(JSON)\b</string>
					<key>name</key>
					<string>entity.name.type.object.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
  ((?&lt;=JSON\.)(
    parse|stringify
  ))\b</string>
					<key>name</key>
					<string>support.function.static.array.coffee</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support_nodejs</string>
				</dict>
			</array>
		</dict>
		<key>support_nodejs</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(module)\b</string>
					<key>name</key>
					<string>entity.name.type.object.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>((?&lt;=module\.)(exports))\b</string>
					<key>name</key>
					<string>support.function.console.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(global)\b</string>
					<key>name</key>
					<string>entity.name.type.object.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(process)\b</string>
					<key>name</key>
					<string>entity.name.type.object.coffee</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(require)\b</string>
					<key>name</key>
					<string>support.function.coffee</string>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#invalid</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable_instance</string>
				</dict>
			</array>
		</dict>
		<key>variable_instance</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.this.coffee</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.readwrite.instance.coffee</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(@)([a-zA-Z_\$]\w*)?</string>
					<key>name</key>
					<string>variable.other.readwrite.instance.coffee</string>
				</dict>
			</array>
		</dict>
		<key>variable_name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.assignment.coffee</string>
						</dict>
					</dict>
					<key>match</key>
					<string>([a-zA-Z0-9\$_]\w*(\.\w+)*)</string>
					<key>name</key>
					<string>variable.assignment.coffee</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.coffee</string>
	<key>uuid</key>
	<string>0321607f-f411-4545-a4e3-9707153e48e6</string>
</dict>
</plist>
